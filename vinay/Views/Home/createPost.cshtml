@model vinay.Models.PostTable

@{
    ViewBag.Title = "createPost";
}

<script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
<h2><i class="fa fa-bullhorn" style="font-size:24px"></i>createPost</h2>
<main class="mt-5 pt-3">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm())
                {
                

                    <div class="form-horizontal">
                        <h4>PostTable</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.PostDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.PostDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                         @Html.LabelFor(model => model.PostImage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                               <i class='fas fa-file-image' style='font-size:24px'></i>  <input type="file" id="PostImage" name="PostImage" />
                                @Html.ValidationMessageFor(model => model.PostImage, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostImage1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                <i class='fas fa-file-image' style='font-size:24px'></i>  <input type="file" id="PostImage1" name="PostImage1" /> 
                                @Html.ValidationMessageFor(model => model.PostImage1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostImage2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                <i class='fas fa-file-image' style='font-size:24px'></i>  <input type="file" id="PostImage2" name="PostImage2" /> 
                                @Html.ValidationMessageFor(model => model.PostImage2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PostVideo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <i class="fa fa-youtube-play" style="font-size:24px;color:red"></i><br/>
                                <input type="file" id="PostVideo" name="PostVideo" />
                                @Html.ValidationMessageFor(model => model.PostVideo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.PostLat, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PostLat, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.PostLat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostLng, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PostLng, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.PostLng, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <br/>
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>


    </div>
</main>


<script>
    var x = document.getElementById("demo");

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        x.innerHTML = "Latitude: " + position.coords.latitude +
            "<br>Longitude: " + position.coords.longitude;
    }
</script>

